#include <ros/ros.h>
#include <trajectory_msgs/JointTrajectory.h>
#include <trajectory_msgs/JointTrajectoryPoint.h>

int main(int argc, char** argv)
{

    ros::init(argc, argv, "ur5_cpp_control");
    ros::NodeHandle nh;

    ros::Publisher arm_pub = nh.advertise<trajectory_msgs::JointTrajectory>("/eff_joint_traj_controller/command", 10); // CHANGED TOPIC

    ros::Duration(2.0).sleep();

    trajectory_msgs::JointTrajectory traj;
    traj.joint_names.push_back("shoulder_pan_joint");
    traj.joint_names.push_back("shoulder_lift_joint");
    traj.joint_names.push_back("elbow_joint");
    traj.joint_names.push_back("wrist_1_joint");
    traj.joint_names.push_back("wrist_2_joint");
    traj.joint_names.push_back("wrist_3_joint");

    trajectory_msgs::JointTrajectoryPoint point;

    point.positions.resize(6);
    point.positions[0] = 0.0;   // shoulder_pan_joint
    point.positions[1] = 1.57; // shoulder_lift_joint
    point.positions[2] = 1.57;  // elbow_joint
    point.positions[3] = 0.0;   // wrist_1_joint
    point.positions[4] = 1.57;  // wrist_2_joint
    point.positions[5] = 0.0;   // wrist_3_joint

    point.time_from_start = ros::Duration(3.0); 
    traj.points.push_back(point);

    ros::Rate loop_rate(10);
    while (ros::ok())
    {
        arm_pub.publish(traj);
        loop_rate.sleep();
    }

    return 0;
}